{"version":3,"file":"component---src-templates-listing-page-js-aca3a15f9860c1d906bc.js","mappings":"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","sources":["webpack://ondrej-chrastina-personal-site/./src/components/ListingItem.js","webpack://ondrej-chrastina-personal-site/./src/templates/listing-page.js","webpack://ondrej-chrastina-personal-site/./src/components/BannerLanding.js"],"sourcesContent":["import { Link } from 'gatsby'\nimport React from 'react'\n\nconst ListingItem = ({ item }) => {\n  const itemType = item.__typename\n\n  switch (itemType) {\n    case 'kontent_item_gotcha':\n      return (\n        <article\n          key={item.elements.url_slug.value}\n          data-kontent-item-id={item.system.id}\n          style={{\n            backgroundImage:\n              item.elements.image && item.elements.image.value.length > 0\n                ? `url(\"${item.elements.image.value[0].url}\")`\n                : 'initial',\n          }}\n        >\n          <header className=\"major\">\n            <h3 data-kontent-element-codename=\"title\">\n              {item.elements.title.value}\n            </h3>\n            <div\n              dangerouslySetInnerHTML={{ __html: item.elements.summary.value }}\n              data-kontent-element-codename=\"summary\"\n              className=\"summary\"\n            />\n            <ul className=\"actions\">\n              <li>\n                <Link className=\"button next\" to={item.elements.url_slug.value}>\n                  Learn more\n                </Link>\n              </li>\n            </ul>\n          </header>\n        </article>\n      )\n\n    case 'kontent_item_project': {\n      return (\n        <article\n          key={item.elements.url_slug.value}\n          data-kontent-item-id={item.system.id}\n          style={{\n            backgroundImage:\n              item.elements.image && item.elements.image.value.length > 0\n                ? `url(\"${item.elements.image.value[0].url}\")`\n                : 'initial',\n            backgroundOpacity: '0.2',\n          }}\n        >\n          <header className=\"major\">\n            <h3 data-kontent-element-codename=\"title\">\n              {item.elements.title.value}\n            </h3>\n            <div\n              dangerouslySetInnerHTML={{ __html: item.elements.summary.value }}\n              data-kontent-element-codename=\"summary\"\n              className=\"summary\"\n            />\n            <ul className=\"actions\">\n              <li>\n                <Link className=\"button next\" to={item.elements.url_slug.value}>\n                  Learn more\n                </Link>\n              </li>\n            </ul>\n          </header>\n        </article>\n      )\n    }\n    default:\n      break\n  }\n}\n\nexport default ListingItem\n","import React, { useState } from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport BannerLanding from '../components/BannerLanding'\nimport ListingItem from '../components/ListingItem'\n\n/**\n * Check if there is an intersect in the following Set and array\n * @param {Set<String>} selectedCategories - selected categories\n * @param {Array<String>} itemCategories - categories you want to verify against\n */\nconst categorySuits = (selectedCategories, itemCategories) => {\n  return (\n    [...selectedCategories].filter((category) =>\n      itemCategories.includes(category)\n    ).length > 0\n  )\n}\n\nconst ListingPage = ({\n  data: { kontentItemListingPage: pageData, allKontentItem: listingData },\n}) => {\n  const [selectedCategories, setSelectedCategories] = useState(new Set())\n\n  const gotchas = listingData.nodes.filter(\n    (node) =>\n      node.__typename === 'kontent_item_gotcha' &&\n      node.elements.channel_purpose.value\n        .map((i) => i.codename)\n        .includes('website')\n  )\n\n  const projects = listingData.nodes.filter(\n    (node) =>\n      node.__typename === 'kontent_item_project' &&\n      node.elements.channel_purpose.value\n        .map((i) => i.codename)\n        .includes('website')\n  )\n\n  const items = gotchas.concat(projects)\n\n  const allCategories = {}\n  for (const item of items) {\n    for (const itemCategory of item.elements.listing_category.value) {\n      allCategories[itemCategory.codename] = itemCategory\n    }\n  }\n\n  const allItems = items.filter((item) =>\n    selectedCategories.size === 0\n      ? true\n      : categorySuits(\n          selectedCategories,\n          item.elements.listing_category.value.map((c) => c.codename)\n        )\n  )\n\n  const listingOverview = allItems\n    .filter((item) =>\n      selectedCategories.size === 0\n        ? true\n        : categorySuits(\n            selectedCategories,\n            item.elements.listing_category.value.map((c) => c.codename)\n          )\n    )\n    .map((item) => <ListingItem key={item.system.codename} item={item} />)\n\n  const categories = Object.values(allCategories)\n  const categoriesComponents = categories.map((category) => (\n    <li key={category.codename}>\n      <button\n        className={`button${\n          selectedCategories.has(category.codename) ? ' toggle' : ''\n        }`}\n        data-category-codename={category.codename}\n        onClick={() =>\n          setSelectedCategories((selectedCategories) => {\n            if (selectedCategories.has(category.codename)) {\n              const result = new Set(selectedCategories)\n              result.delete(category.codename)\n              return result\n            } else {\n              return new Set(selectedCategories.add(category.codename))\n            }\n          })\n        }\n      >\n        {category.name}\n      </button>\n    </li>\n  ))\n\n  categoriesComponents.unshift(\n    <li key=\"#ALL\">\n      <button\n        onClick={() => setSelectedCategories(new Set())}\n        className={`button${\n          selectedCategories.size === 0\n            ? ' disabled toggle'\n            : ' icon fa-times-circle'\n        }`}\n      >\n        {selectedCategories.size === 0 ? 'ALL' : 'CLEAR'}\n      </button>\n    </li>\n  )\n\n  return (\n    <Layout>\n      <BannerLanding\n        title={pageData.elements.primary_text.value}\n        content={pageData.elements.secondary_text.value}\n        heroImage={\n          pageData.elements.hero_image.value.length > 0\n            ? pageData.elements.hero_image.value[0]\n            : undefined\n        }\n      />\n      <div className=\"content\">\n        {categories.length > 0 && (\n          <div className=\"inner\">\n            <header className=\"major\">\n              <h2>Categories</h2>\n              <ul className=\"categories\">{categoriesComponents}</ul>\n            </header>\n          </div>\n        )}\n        <section className=\"tiles\">{listingOverview}</section>\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query listingQuery(\n    $language: String!\n    $codename: String!\n    $listTypes: [String]!\n  ) {\n    kontentItemListingPage(\n      preferred_language: { eq: $language }\n      system: { codename: { eq: $codename } }\n    ) {\n      elements {\n        primary_text {\n          value\n        }\n        secondary_text {\n          value\n        }\n        hero_image {\n          value {\n            name\n            url\n            width\n            height\n            description\n          }\n        }\n        listing_page_options__list_types {\n          value\n        }\n      }\n    }\n    allKontentItem(filter: { system: { type: { in: $listTypes } } }) {\n      nodes {\n        __typename\n        system {\n          id\n          codename\n        }\n        ... on kontent_item_gotcha {\n          elements {\n            title {\n              value\n            }\n            url_slug {\n              value\n            }\n            image {\n              value {\n                url\n              }\n            }\n            summary {\n              value\n            }\n            channel_purpose {\n              value {\n                codename\n              }\n            }\n            listing_category {\n              value {\n                name\n                codename\n              }\n            }\n          }\n        }\n        ... on kontent_item_project {\n          elements {\n            title {\n              value\n            }\n            url_slug {\n              value\n            }\n            release_date {\n              value\n            }\n            image {\n              value {\n                url\n              }\n            }\n            summary {\n              value\n            }\n            channel_purpose {\n              value {\n                codename\n              }\n            }\n            listing_category {\n              value {\n                name\n                codename\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default ListingPage\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport { ImageElement } from '@kontent-ai/gatsby-components'\n\nconst BannerLanding = (props) => (\n  <section\n    id=\"banner\"\n    data-kontent-item-id={props.itemId}\n    className={`style${Math.floor(Math.random() * 6) + 1}`}\n  >\n    {props.heroImage && (\n      <ImageElement\n        image={props.heroImage}\n        style={{\n          position: 'absolute',\n          left: 0,\n          top: 0,\n          width: '100%',\n          height: '100%',\n        }}\n        imgStyle={{\n          objectPosition: '75% 25%',\n        }}\n      />\n    )}\n\n    <div className=\"inner\">\n      <header className=\"major\">\n        <h1 data-kontent-element-codename={props.titleCodename}>\n          {props.title}\n        </h1>\n      </header>\n      <div\n        className=\"content\"\n        dangerouslySetInnerHTML={{ __html: props.content }}\n        data-kontent-element-codename={props.contentCodename}\n      ></div>\n      {props.button && (\n        <div className=\"content\">\n          <Link\n            className=\"button icon fa-angle-double-left\"\n            to={props.button.to}\n          >\n            {props.button.title}\n          </Link>\n        </div>\n      )}\n    </div>\n  </section>\n)\n\nexport default BannerLanding\n"],"names":["_ref","item","__typename","React","key","elements","url_slug","value","system","id","style","backgroundImage","image","length","url","className","title","dangerouslySetInnerHTML","__html","summary","Link","to","backgroundOpacity","categorySuits","selectedCategories","itemCategories","_toConsumableArray","filter","category","includes","data","kontentItemListingPage","pageData","allKontentItem","listingData","setSelectedCategories","useState","Set","gotchas","nodes","node","channel_purpose","map","i","codename","projects","items","concat","allCategories","itemCategory","listing_category","listingOverview","size","c","ListingItem","categories","Object","values","categoriesComponents","has","onClick","result","delete","add","name","unshift","Layout","BannerLanding","primary_text","content","secondary_text","heroImage","hero_image","undefined","props","itemId","Math","floor","random","ImageElement","position","left","top","width","height","imgStyle","objectPosition","titleCodename","contentCodename","button"],"sourceRoot":""}