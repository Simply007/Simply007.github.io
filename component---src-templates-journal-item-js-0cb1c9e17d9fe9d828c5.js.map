{"version":3,"sources":["webpack://ondrej-chrastina-personal-site/./src/components/BannerLanding.js","webpack://ondrej-chrastina-personal-site/./src/components/RichText.js","webpack://ondrej-chrastina-personal-site/./src/templates/journal-item.js"],"names":["props","id","data-kontent-item-id","itemId","className","Math","floor","random","heroImage","image","style","position","left","top","width","height","imgStyle","objectPosition","data-kontent-element-codename","titleCodename","title","dangerouslySetInnerHTML","__html","content","contentCodename","button","Link","to","element","value","linkedItems","modular_content","resolveLinkedItem","linkedItem","__typename","codeComponent","JSON","parse","elements","code","language","href","external_url","icon","images","resolveImage","kontentItemGotcha","data","summary","system","length","undefined"],"mappings":"uLAmDA,IA/CsB,SAAAA,GAAK,OACzB,2BACEC,GAAG,SACHC,uBAAsBF,EAAMG,OAC5BC,UAAS,SAAUC,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgB,IAElDP,EAAMQ,WACL,gBAAC,KAAD,CACEC,MAAOT,EAAMQ,UACbE,MAAO,CACLC,SAAU,WACVC,KAAM,EACNC,IAAK,EACLC,MAAO,OACPC,OAAQ,QAEVC,SAAU,CACRC,eAAgB,aAKtB,uBAAKb,UAAU,SACb,0BAAQA,UAAU,SAChB,sBAAIc,gCAA+BlB,EAAMmB,eACtCnB,EAAMoB,QAGX,uBACEhB,UAAU,UACViB,wBAAyB,CAAEC,OAAQtB,EAAMuB,SACzCL,gCAA+BlB,EAAMwB,kBAEtCxB,EAAMyB,QACL,uBAAKrB,UAAU,WACb,gBAAC,EAAAsB,KAAD,CACEtB,UAAU,mCACVuB,GAAI3B,EAAMyB,OAAOE,IAEhB3B,EAAMyB,OAAOL,Y,mECA1B,IAtCiB,SAAC,GAAD,IAAGQ,EAAH,EAAGA,QAAH,OACf,gBAAC,KAAD,CACEC,MAAOD,EAAQC,MACfC,YAAaF,EAAQG,gBACrBC,kBAAmB,SAAAC,GACjB,OAAQA,EAAWC,YACjB,IAAK,4BACH,IAAMC,EAAgBC,KAAKC,MAAMJ,EAAWK,SAASC,KAAKV,OAC1D,OACE,gBAAC,IAAD,CACEW,SAAUL,EAAcK,SACxBD,KAAMJ,EAAcI,OAG1B,IAAK,sBACH,OACE,yBACE,qBACEE,KAAMR,EAAWK,SAASI,aAAab,MACvCzB,UAAU,UAEV,wBAAMA,UAAS,QAAU6B,EAAWK,SAASK,KAAKd,OAC/CI,EAAWK,SAASlB,MAAMS,SAKrC,QACE,OAAO,wDAGbe,OAAQhB,EAAQgB,OAChBC,aAAc,SAAApC,GACZ,OAAO,gBAAC,KAAD,CAAcA,MAAOA,S,qFCkElC,UAlGoB,SAAC,GAAD,IAAWqC,EAAX,EAAGC,KAAQD,kBAAX,OAClB,gBAAC,IAAD,KACE,gBAAC,IAAD,CACE1B,MAAO0B,EAAkBR,SAASlB,MAAMS,MACxCN,QAASuB,EAAkBR,SAASU,QAAQnB,MAC5CJ,OAAQ,CAAEL,MAAO,kBAAmBO,GAAI,YACxCR,cAAc,QACdK,gBAAgB,UAChBrB,OAAQ2C,EAAkBG,OAAOhD,GACjCO,UACEsC,EAAkBR,SAAS7B,MAAMoB,MAAMqB,OAAS,EAC5CJ,EAAkBR,SAAS7B,MAAMoB,MAAM,QACvCsB,IAGR,uBACElD,GAAG,OACHG,UAAU,MACVF,uBAAsB4C,EAAkBG,OAAOhD,IAE/C,+BACE,uBAAKG,UAAU,QAAQc,gCAA8B,WACnD,gBAAC,IAAD,CAAUU,QAASkB,EAAkBR,SAASf","file":"component---src-templates-journal-item-js-0cb1c9e17d9fe9d828c5.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport { ImageElement } from '@kentico/gatsby-kontent-components'\n\nconst BannerLanding = props => (\n  <section\n    id=\"banner\"\n    data-kontent-item-id={props.itemId}\n    className={`style${Math.floor(Math.random() * 6) + 1}`}\n  >\n    {props.heroImage && (\n      <ImageElement\n        image={props.heroImage}\n        style={{\n          position: 'absolute',\n          left: 0,\n          top: 0,\n          width: '100%',\n          height: '100%',\n        }}\n        imgStyle={{\n          objectPosition: '75% 25%',\n        }}\n      />\n    )}\n\n    <div className=\"inner\">\n      <header className=\"major\">\n        <h1 data-kontent-element-codename={props.titleCodename}>\n          {props.title}\n        </h1>\n      </header>\n      <div\n        className=\"content\"\n        dangerouslySetInnerHTML={{ __html: props.content }}\n        data-kontent-element-codename={props.contentCodename}\n      ></div>\n      {props.button && (\n        <div className=\"content\">\n          <Link\n            className=\"button icon fa-angle-double-left\"\n            to={props.button.to}\n          >\n            {props.button.title}\n          </Link>\n        </div>\n      )}\n    </div>\n  </section>\n)\n\nexport default BannerLanding\n","import React from 'react'\r\nimport { RichTextElement } from '@kentico/gatsby-kontent-components'\r\nimport CodeHighlighter from '../components/CodeHighlighter'\r\nimport { ImageElement } from '@kentico/gatsby-kontent-components'\r\n\r\nconst RichText = ({ element }) => (\r\n  <RichTextElement\r\n    value={element.value}\r\n    linkedItems={element.modular_content}\r\n    resolveLinkedItem={linkedItem => {\r\n      switch (linkedItem.__typename) {\r\n        case 'kontent_item_code_snippet':\r\n          const codeComponent = JSON.parse(linkedItem.elements.code.value)\r\n          return (\r\n            <CodeHighlighter\r\n              language={codeComponent.language}\r\n              code={codeComponent.code}\r\n            />\r\n          )\r\n        case 'kontent_item_button':\r\n          return (\r\n            <p>\r\n              <a\r\n                href={linkedItem.elements.external_url.value}\r\n                className=\"button\"\r\n              >\r\n                <span className={`icon ${linkedItem.elements.icon.value}`}>\r\n                  {linkedItem.elements.title.value}\r\n                </span>\r\n              </a>\r\n            </p>\r\n          )\r\n        default:\r\n          return <div>Component not supported</div>\r\n      }\r\n    }}\r\n    images={element.images}\r\n    resolveImage={image => {\r\n      return <ImageElement image={image} />\r\n    }}\r\n  />\r\n)\r\n\r\nexport default RichText\r\n","import React from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport Layout from '../components/layout'\r\nimport BannerLanding from '../components/BannerLanding'\r\nimport RichText from '../components/RichText'\r\n\r\nconst JournalItem = ({ data: { kontentItemGotcha } }) => (\r\n  <Layout>\r\n    <BannerLanding\r\n      title={kontentItemGotcha.elements.title.value}\r\n      content={kontentItemGotcha.elements.summary.value}\r\n      button={{ title: 'Back to journal', to: '/journal' }}\r\n      titleCodename=\"title\"\r\n      contentCodename=\"summary\"\r\n      itemId={kontentItemGotcha.system.id}\r\n      heroImage={\r\n        kontentItemGotcha.elements.image.value.length > 0\r\n          ? kontentItemGotcha.elements.image.value[0]\r\n          : undefined\r\n      }\r\n    />\r\n    <div\r\n      id=\"main\"\r\n      className=\"alt\"\r\n      data-kontent-item-id={kontentItemGotcha.system.id}\r\n    >\r\n      <section>\r\n        <div className=\"inner\" data-kontent-element-codename=\"content\">\r\n          <RichText element={kontentItemGotcha.elements.content} />\r\n        </div>\r\n      </section>\r\n    </div>\r\n  </Layout>\r\n)\r\n\r\nexport const query = graphql`\r\n  query GotchaQuery($language: String = \"\", $codename: String = \"\") {\r\n    kontentItemGotcha(\r\n      preferred_language: { eq: $language }\r\n      system: { codename: { eq: $codename } }\r\n    ) {\r\n      system {\r\n        id\r\n      }\r\n      elements {\r\n        title {\r\n          value\r\n        }\r\n        post_date {\r\n          value\r\n        }\r\n        summary {\r\n          value\r\n        }\r\n        image {\r\n          value {\r\n            name\r\n            url\r\n            width\r\n            height\r\n            description\r\n          }\r\n        }\r\n        content {\r\n          value\r\n          modular_content {\r\n            __typename\r\n            system {\r\n              codename\r\n            }\r\n            ... on kontent_item_code_snippet {\r\n              elements {\r\n                code {\r\n                  value\r\n                }\r\n              }\r\n            }\r\n            ... on kontent_item_button {\r\n              elements {\r\n                icon {\r\n                  value\r\n                }\r\n                title {\r\n                  value\r\n                }\r\n                external_url {\r\n                  value\r\n                }\r\n              }\r\n            }\r\n          }\r\n          images {\r\n            image_id\r\n            url\r\n            width\r\n            height\r\n            description\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default JournalItem\r\n"],"sourceRoot":""}