{"version":3,"sources":["webpack:///./src/components/ListingItem.js","webpack:///./src/templates/listing-page.js","webpack:///./src/components/BannerLanding.js"],"names":["ListingItem","item","key","elements","url_slug","value","data-kontent-item-id","system","id","className","data-kontent-element-codename","title","dangerouslySetInnerHTML","__html","summary","to","ListingPage","data","pageData","kontentItemListingPage","listingData","allKontentItem","categories","useState","Set","selectedCategories","setSelectedCategories","journalOverview","nodes","filter","node","__typename","channel_purpose","map","i","codename","includes","gotcha","size","itemCategories","category","length","categorySuits","listing_category","c","categoriesComponents","terms","has","data-category-codename","onClick","result","delete","add","name","unshift","BannerLanding","primary_text","content","secondary_text","heroImage","hero_image","localFile","childImageSharp","fluid","undefined","props","itemId","Math","floor","random","style","position","left","top","width","height","imgStyle","objectPosition","titleCodename","contentCodename","button"],"mappings":"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","file":"component---src-templates-listing-page-js-253c428104aa51b20732.js","sourcesContent":["import { Link } from 'gatsby'\r\nimport React from 'react'\r\n\r\nconst ListingItem = ({ item }) => (\r\n  <article\r\n    key={item.elements.url_slug.value}\r\n    data-kontent-item-id={item.system.id}\r\n  >\r\n    <header className=\"major\">\r\n      <h3 data-kontent-element-codename=\"title\">{item.elements.title.value}</h3>\r\n      <p\r\n        dangerouslySetInnerHTML={{ __html: item.elements.summary.value }}\r\n        data-kontent-element-codename=\"title\"\r\n      />\r\n      <ul className=\"actions\">\r\n        <li>\r\n          <Link className=\"button next\" to={item.elements.url_slug.value}>\r\n            Learn more\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </header>\r\n  </article>\r\n)\r\n\r\nexport default ListingItem\r\n","import React, { useState } from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport Layout from '../components/layout'\r\nimport BannerLanding from '../components/BannerLanding'\r\nimport ListingItem from '../components/ListingItem'\r\n\r\n/**\r\n * Check if there is an intersect in the following Set and array\r\n * @param {Set<String>} selectedCategories - selected categories\r\n * @param {Array<String>} itemCategories - categories you want to verify against\r\n */\r\nconst categorySuits = (selectedCategories, itemCategories) => {\r\n  return (\r\n    [...selectedCategories].filter(category =>\r\n      itemCategories.includes(category)\r\n    ).length > 0\r\n  )\r\n}\r\n\r\nconst ListingPage = ({\r\n  data: {\r\n    kontentItemListingPage: pageData,\r\n    allKontentItem: listingData,\r\n    categories,\r\n  },\r\n}) => {\r\n  const [selectedCategories, setSelectedCategories] = useState(new Set())\r\n\r\n  const gotchas = listingData.nodes.filter(\r\n    node =>\r\n      node.__typename === 'kontent_item_gotcha' &&\r\n      node.elements.channel_purpose.value\r\n        .map(i => i.codename)\r\n        .includes('website')\r\n  )\r\n\r\n  const journalOverview = gotchas\r\n    .filter(gotcha =>\r\n      selectedCategories.size === 0\r\n        ? true\r\n        : categorySuits(\r\n            selectedCategories,\r\n            gotcha.elements.listing_category.value.map(c => c.codename)\r\n          )\r\n    )\r\n    .map(item => <ListingItem item={item} />)\r\n\r\n  const categoriesComponents = categories.terms.map(category => (\r\n    <li key={category.codename}>\r\n      <button\r\n        className={`button${\r\n          selectedCategories.has(category.codename) ? ' toggle' : ''\r\n        }`}\r\n        data-category-codename={category.codename}\r\n        onClick={() =>\r\n          setSelectedCategories(selectedCategories => {\r\n            if (selectedCategories.has(category.codename)) {\r\n              const result = new Set(selectedCategories)\r\n              result.delete(category.codename)\r\n              return result\r\n            } else {\r\n              return new Set(selectedCategories.add(category.codename))\r\n            }\r\n          })\r\n        }\r\n      >\r\n        {category.name}\r\n      </button>\r\n    </li>\r\n  ))\r\n\r\n  categoriesComponents.unshift(\r\n    <li key=\"#ALL\">\r\n      <button\r\n        onClick={() => setSelectedCategories(new Set())}\r\n        className={`button${\r\n          selectedCategories.size === 0\r\n            ? ' disabled toggle'\r\n            : ' icon fa-times-circle'\r\n        }`}\r\n      >\r\n        {selectedCategories.size === 0 ? 'ALL' : 'CLEAR'}\r\n      </button>\r\n    </li>\r\n  )\r\n\r\n  return (\r\n    <Layout>\r\n      <BannerLanding\r\n        title={pageData.elements.primary_text.value}\r\n        content={pageData.elements.secondary_text.value}\r\n        heroImage={\r\n          pageData.elements.hero_image.value.length > 0\r\n            ? pageData.elements.hero_image.value[0].localFile.childImageSharp\r\n                .fluid\r\n            : undefined\r\n        }\r\n      />\r\n      <div className=\"content\">\r\n        <div className=\"inner\">\r\n          <header className=\"major\">\r\n            <h2>My Gotchas</h2>\r\n            {categories.terms.length > 0 && (\r\n              <ul className=\"categories\">{categoriesComponents}</ul>\r\n            )}\r\n          </header>\r\n        </div>\r\n        <section className=\"tiles\">{journalOverview}</section>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query listingQuery(\r\n    $language: String!\r\n    $codename: String!\r\n    $listTypes: [String]!\r\n  ) {\r\n    kontentItemListingPage(\r\n      preferred_language: { eq: $language }\r\n      system: { codename: { eq: $codename } }\r\n    ) {\r\n      elements {\r\n        primary_text {\r\n          value\r\n        }\r\n        secondary_text {\r\n          value\r\n        }\r\n        hero_image {\r\n          value {\r\n            localFile {\r\n              childImageSharp {\r\n                fluid(quality: 90, maxHeight: 1920) {\r\n                  ...GatsbyImageSharpFluid_withWebp\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        listing_page_options__list_types {\r\n          value\r\n        }\r\n      }\r\n    }\r\n    allKontentItem(filter: { system: { type: { in: $listTypes } } }) {\r\n      nodes {\r\n        system {\r\n          id\r\n        }\r\n        ... on kontent_item_gotcha {\r\n          elements {\r\n            title {\r\n              value\r\n            }\r\n            url_slug {\r\n              value\r\n            }\r\n            summary {\r\n              value\r\n            }\r\n            channel_purpose {\r\n              value {\r\n                codename\r\n              }\r\n            }\r\n            listing_category {\r\n              value {\r\n                codename\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    categories: kontentTaxonomy(\r\n      system: { codename: { eq: \"listing_category\" } }\r\n    ) {\r\n      terms {\r\n        name\r\n        codename\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default ListingPage\r\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport Img from 'gatsby-image'\n\nconst BannerLanding = props => (\n  <section\n    id=\"banner\"\n    data-kontent-item-id={props.itemId}\n    className={`style${Math.floor(Math.random() * 6) + 1}`}\n  >\n    {props.heroImage && (\n      <Img\n        fluid={props.heroImage}\n        style={{\n          position: 'absolute',\n          left: 0,\n          top: 0,\n          width: '100%',\n          height: '100%',\n        }}\n        imgStyle={{\n          objectPosition: '75% 25%',\n        }}\n      />\n    )}\n\n    <div className=\"inner\">\n      <header className=\"major\">\n        <h1 data-kontent-element-codename={props.titleCodename}>\n          {props.title}\n        </h1>\n      </header>\n      <div\n        className=\"content\"\n        dangerouslySetInnerHTML={{ __html: props.content }}\n        data-kontent-element-codename={props.contentCodename}\n      ></div>\n      {props.button && (\n        <div className=\"content\">\n          <Link\n            className=\"button icon fa-angle-double-left\"\n            to={props.button.to}\n          >\n            {props.button.title}\n          </Link>\n        </div>\n      )}\n    </div>\n  </section>\n)\n\nexport default BannerLanding\n"],"sourceRoot":""}