{"version":3,"file":"component---src-templates-project-item-js-72b6a32ba9254e75a23c.js","mappings":"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","sources":["webpack://ondrej-chrastina-personal-site/./src/components/BannerLanding.js","webpack://ondrej-chrastina-personal-site/./src/templates/project-item.js","webpack://ondrej-chrastina-personal-site/./src/components/RichText.js"],"sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport { ImageElement } from '@kontent-ai/gatsby-components'\n\nconst BannerLanding = (props) => (\n  <section\n    id=\"banner\"\n    data-kontent-item-id={props.itemId}\n    className={`style${Math.floor(Math.random() * 6) + 1}`}\n  >\n    {props.heroImage && (\n      <ImageElement\n        image={props.heroImage}\n        style={{\n          position: 'absolute',\n          left: 0,\n          top: 0,\n          width: '100%',\n          height: '100%',\n        }}\n        imgStyle={{\n          objectPosition: '75% 25%',\n        }}\n      />\n    )}\n\n    <div className=\"inner\">\n      <header className=\"major\">\n        <h1 data-kontent-element-codename={props.titleCodename}>\n          {props.title}\n        </h1>\n      </header>\n      <div\n        className=\"content\"\n        dangerouslySetInnerHTML={{ __html: props.content }}\n        data-kontent-element-codename={props.contentCodename}\n      ></div>\n      {props.button && (\n        <div className=\"content\">\n          <Link\n            className=\"button icon fa-angle-double-left\"\n            to={props.button.to}\n          >\n            {props.button.title}\n          </Link>\n        </div>\n      )}\n    </div>\n  </section>\n)\n\nexport default BannerLanding\n","import React from 'react'\nimport { graphql, Link } from 'gatsby'\nimport Layout from '../components/layout'\nimport BannerLanding from '../components/BannerLanding'\nimport RichText from '../components/RichText'\n\nconst ProjectItem = ({ data: { kontentItemProject } }) => {\n  return (\n    <Layout>\n      <BannerLanding\n        title={kontentItemProject.elements.title.value}\n        content={kontentItemProject.elements.summary.value}\n        button={{ title: 'Back to projects', to: '/projects' }}\n        titleCodename=\"title\"\n        contentCodename=\"summary\"\n        itemId={kontentItemProject.system.id}\n        heroImage={\n          kontentItemProject.elements.image.value.length > 0\n            ? kontentItemProject.elements.image.value[0]\n            : undefined\n        }\n      />\n      <div\n        id=\"main\"\n        className=\"alt\"\n        data-kontent-item-id={kontentItemProject.system.id}\n      >\n        <section>\n          <div className=\"inner\" data-kontent-element-codename=\"content\">\n            <ul className=\"icons\">\n              {kontentItemProject.elements.live_url.value && (\n                <li>\n                  <Link\n                    className=\"icon alt fa-globe\"\n                    to={kontentItemProject.elements.live_url.value}\n                    title=\"Live\"\n                  />\n                </li>\n              )}\n              {kontentItemProject.elements.source_code_url.value && (\n                <li>\n                  <Link\n                    className=\"icon alt fa-code\"\n                    to={kontentItemProject.elements.source_code_url.value}\n                    title=\"Source code\"\n                  />\n                </li>\n              )}\n              {kontentItemProject.elements.release_date.value && (\n                <li>\n                  <strong>Released: </strong>\n                  {new Date(\n                    kontentItemProject.elements.release_date.value\n                  ).toDateString()}\n                </li>\n              )}\n            </ul>\n            <RichText element={kontentItemProject.elements.content} />\n          </div>\n        </section>\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query ProjectQuery($language: String = \"\", $codename: String = \"\") {\n    kontentItemProject(\n      preferred_language: { eq: $language }\n      system: { codename: { eq: $codename } }\n    ) {\n      system {\n        id\n      }\n      elements {\n        title {\n          value\n        }\n        release_date {\n          value\n        }\n        source_code_url {\n          value\n        }\n        live_url {\n          value\n        }\n        summary {\n          value\n        }\n        image {\n          value {\n            url\n            width\n            height\n            description\n          }\n        }\n        content {\n          value\n          modular_content {\n            system {\n              codename\n              type\n            }\n            ... on kontent_item_code_snippet {\n              elements {\n                code {\n                  value\n                }\n              }\n            }\n            ... on kontent_item_button {\n              elements {\n                icon {\n                  value\n                }\n                title {\n                  value\n                }\n                external_url {\n                  value\n                }\n              }\n            }\n          }\n          images {\n            image_id\n            url\n            width\n            height\n            description\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default ProjectItem\n","import React from 'react'\nimport { ImageElement, RichTextElement } from '@kontent-ai/gatsby-components'\nimport CodeHighlighter from '../components/CodeHighlighter'\n\nconst RichText = ({ element }) => (\n  <RichTextElement\n    value={element.value}\n    linkedItems={element.modular_content}\n    resolveLinkedItem={(linkedItem) => {\n      switch (linkedItem.system.type) {\n        case 'code_snippet':\n          const codeComponent = JSON.parse(linkedItem.elements.code.value)\n          return (\n            <CodeHighlighter\n              language={codeComponent.language}\n              code={codeComponent.code}\n            />\n          )\n        case 'button':\n          return (\n            <p>\n              <a\n                href={linkedItem.elements.external_url.value}\n                className=\"button\"\n              >\n                <span className={`icon ${linkedItem.elements.icon.value}`}>\n                  {linkedItem.elements.title.value}\n                </span>\n              </a>\n            </p>\n          )\n        default:\n          return <div>Component not supported</div>\n      }\n    }}\n    images={element.images}\n    resolveImage={(image) => {\n      return <ImageElement image={image} />\n    }}\n  />\n)\n\nexport default RichText\n"],"names":["props","React","id","itemId","className","Math","floor","random","heroImage","ImageElement","image","style","position","left","top","width","height","imgStyle","objectPosition","titleCodename","title","dangerouslySetInnerHTML","__html","content","contentCodename","button","Link","to","_ref","data","kontentItemProject","Layout","BannerLanding","elements","value","summary","system","length","undefined","live_url","source_code_url","release_date","Date","toDateString","RichText","element","RichTextElement","linkedItems","modular_content","resolveLinkedItem","linkedItem","type","codeComponent","JSON","parse","code","CodeHighlighter","language","href","external_url","icon","images","resolveImage"],"sourceRoot":""}