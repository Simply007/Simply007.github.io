{"version":3,"sources":["webpack:///./src/components/ListingItem.js","webpack:///./src/templates/listing-page.js","webpack:///./src/components/BannerLanding.js"],"names":["ListingItem","item","__typename","key","elements","url_slug","value","data-kontent-item-id","system","id","style","backgroundImage","image","length","url","className","data-kontent-element-codename","title","dangerouslySetInnerHTML","__html","summary","to","backgroundOpacity","categorySuits","selectedCategories","itemCategories","filter","category","includes","ListingPage","data","pageData","kontentItemListingPage","listingData","allKontentItem","useState","Set","setSelectedCategories","gotchas","nodes","node","channel_purpose","map","i","codename","projects","items","concat","allCategories","listing_category","itemCategory","listingOverview","size","c","categories","Object","values","categoriesComponents","has","data-category-codename","onClick","result","delete","add","name","unshift","BannerLanding","primary_text","content","secondary_text","heroImage","hero_image","localFile","childImageSharp","fluid","undefined","props","itemId","Math","floor","random","position","left","top","width","height","imgStyle","objectPosition","titleCodename","contentCodename","button"],"mappings":"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","file":"component---src-templates-listing-page-js-225b709a5be1bbbeefc5.js","sourcesContent":["import { Link } from 'gatsby'\r\nimport React from 'react'\r\n\r\nconst ListingItem = ({ item }) => {\r\n  const itemType = item.__typename\r\n\r\n  switch (itemType) {\r\n    case 'kontent_item_gotcha':\r\n      return (\r\n        <article\r\n          key={item.elements.url_slug.value}\r\n          data-kontent-item-id={item.system.id}\r\n          style={{\r\n            backgroundImage:\r\n              item.elements.image && item.elements.image.value.length > 0\r\n                ? `url(\"${item.elements.image.value[0].url}\")`\r\n                : 'initial',\r\n          }}\r\n        >\r\n          <header className=\"major\">\r\n            <h3 data-kontent-element-codename=\"title\">\r\n              {item.elements.title.value}\r\n            </h3>\r\n            <div\r\n              dangerouslySetInnerHTML={{ __html: item.elements.summary.value }}\r\n              data-kontent-element-codename=\"summary\"\r\n              className=\"summary\"\r\n            />\r\n            <ul className=\"actions\">\r\n              <li>\r\n                <Link className=\"button next\" to={item.elements.url_slug.value}>\r\n                  Learn more\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </header>\r\n        </article>\r\n      )\r\n\r\n    case 'kontent_item_project': {\r\n      return (\r\n        <article\r\n          key={item.elements.url_slug.value}\r\n          data-kontent-item-id={item.system.id}\r\n          style={{\r\n            backgroundImage:\r\n              item.elements.image && item.elements.image.value.length > 0\r\n                ? `url(\"${item.elements.image.value[0].url}\")`\r\n                : 'initial',\r\n            backgroundOpacity: '0.2',\r\n          }}\r\n        >\r\n          <header className=\"major\">\r\n            <h3 data-kontent-element-codename=\"title\">\r\n              {item.elements.title.value}\r\n            </h3>\r\n            <div\r\n              dangerouslySetInnerHTML={{ __html: item.elements.summary.value }}\r\n              data-kontent-element-codename=\"summary\"\r\n              className=\"summary\"\r\n            />\r\n            <ul className=\"actions\">\r\n              <li>\r\n                <Link className=\"button next\" to={item.elements.url_slug.value}>\r\n                  Learn more\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </header>\r\n        </article>\r\n      )\r\n    }\r\n    default:\r\n      break\r\n  }\r\n}\r\n\r\nexport default ListingItem\r\n","import React, { useState } from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport Layout from '../components/layout'\r\nimport BannerLanding from '../components/BannerLanding'\r\nimport ListingItem from '../components/ListingItem'\r\n\r\n/**\r\n * Check if there is an intersect in the following Set and array\r\n * @param {Set<String>} selectedCategories - selected categories\r\n * @param {Array<String>} itemCategories - categories you want to verify against\r\n */\r\nconst categorySuits = (selectedCategories, itemCategories) => {\r\n  return (\r\n    [...selectedCategories].filter(category =>\r\n      itemCategories.includes(category)\r\n    ).length > 0\r\n  )\r\n}\r\n\r\nconst ListingPage = ({\r\n  data: { kontentItemListingPage: pageData, allKontentItem: listingData },\r\n}) => {\r\n  const [selectedCategories, setSelectedCategories] = useState(new Set())\r\n\r\n  const gotchas = listingData.nodes.filter(\r\n    node =>\r\n      node.__typename === 'kontent_item_gotcha' &&\r\n      node.elements.channel_purpose.value\r\n        .map(i => i.codename)\r\n        .includes('website')\r\n  )\r\n\r\n  const projects = listingData.nodes.filter(\r\n    node =>\r\n      node.__typename === 'kontent_item_project' &&\r\n      node.elements.channel_purpose.value\r\n        .map(i => i.codename)\r\n        .includes('website')\r\n  )\r\n\r\n  const items = gotchas.concat(projects)\r\n\r\n  const allCategories = {}\r\n  for (const item of items) {\r\n    for (const itemCategory of item.elements.listing_category.value) {\r\n      allCategories[itemCategory.codename] = itemCategory\r\n    }\r\n  }\r\n\r\n  const allItems = items.filter(item =>\r\n    selectedCategories.size === 0\r\n      ? true\r\n      : categorySuits(\r\n          selectedCategories,\r\n          item.elements.listing_category.value.map(c => c.codename)\r\n        )\r\n  )\r\n\r\n  const listingOverview = allItems\r\n    .filter(item =>\r\n      selectedCategories.size === 0\r\n        ? true\r\n        : categorySuits(\r\n            selectedCategories,\r\n            item.elements.listing_category.value.map(c => c.codename)\r\n          )\r\n    )\r\n    .map(item => <ListingItem key={item.system.codename} item={item} />)\r\n\r\n  const categories = Object.values(allCategories)\r\n  const categoriesComponents = categories.map(category => (\r\n    <li key={category.codename}>\r\n      <button\r\n        className={`button${\r\n          selectedCategories.has(category.codename) ? ' toggle' : ''\r\n        }`}\r\n        data-category-codename={category.codename}\r\n        onClick={() =>\r\n          setSelectedCategories(selectedCategories => {\r\n            if (selectedCategories.has(category.codename)) {\r\n              const result = new Set(selectedCategories)\r\n              result.delete(category.codename)\r\n              return result\r\n            } else {\r\n              return new Set(selectedCategories.add(category.codename))\r\n            }\r\n          })\r\n        }\r\n      >\r\n        {category.name}\r\n      </button>\r\n    </li>\r\n  ))\r\n\r\n  categoriesComponents.unshift(\r\n    <li key=\"#ALL\">\r\n      <button\r\n        onClick={() => setSelectedCategories(new Set())}\r\n        className={`button${\r\n          selectedCategories.size === 0\r\n            ? ' disabled toggle'\r\n            : ' icon fa-times-circle'\r\n        }`}\r\n      >\r\n        {selectedCategories.size === 0 ? 'ALL' : 'CLEAR'}\r\n      </button>\r\n    </li>\r\n  )\r\n\r\n  return (\r\n    <Layout>\r\n      <BannerLanding\r\n        title={pageData.elements.primary_text.value}\r\n        content={pageData.elements.secondary_text.value}\r\n        heroImage={\r\n          pageData.elements.hero_image.value.length > 0\r\n            ? pageData.elements.hero_image.value[0].localFile.childImageSharp\r\n                .fluid\r\n            : undefined\r\n        }\r\n      />\r\n      <div className=\"content\">\r\n        {categories.length > 0 && (\r\n          <div className=\"inner\">\r\n            <header className=\"major\">\r\n              <h2>Categories</h2>\r\n              <ul className=\"categories\">{categoriesComponents}</ul>\r\n            </header>\r\n          </div>\r\n        )}\r\n        <section className=\"tiles\">{listingOverview}</section>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query listingQuery(\r\n    $language: String!\r\n    $codename: String!\r\n    $listTypes: [String]!\r\n  ) {\r\n    kontentItemListingPage(\r\n      preferred_language: { eq: $language }\r\n      system: { codename: { eq: $codename } }\r\n    ) {\r\n      elements {\r\n        primary_text {\r\n          value\r\n        }\r\n        secondary_text {\r\n          value\r\n        }\r\n        hero_image {\r\n          value {\r\n            localFile {\r\n              childImageSharp {\r\n                fluid(quality: 90, maxHeight: 1920) {\r\n                  ...GatsbyImageSharpFluid_withWebp\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        listing_page_options__list_types {\r\n          value\r\n        }\r\n      }\r\n    }\r\n    allKontentItem(filter: { system: { type: { in: $listTypes } } }) {\r\n      nodes {\r\n        system {\r\n          id\r\n          codename\r\n        }\r\n        ... on kontent_item_gotcha {\r\n          elements {\r\n            title {\r\n              value\r\n            }\r\n            url_slug {\r\n              value\r\n            }\r\n            image {\r\n              value {\r\n                url\r\n              }\r\n            }\r\n            summary {\r\n              value\r\n            }\r\n            channel_purpose {\r\n              value {\r\n                codename\r\n              }\r\n            }\r\n            listing_category {\r\n              value {\r\n                name\r\n                codename\r\n              }\r\n            }\r\n          }\r\n        }\r\n        ... on kontent_item_project {\r\n          elements {\r\n            title {\r\n              value\r\n            }\r\n            url_slug {\r\n              value\r\n            }\r\n            release_date {\r\n              value\r\n            }\r\n            image {\r\n              value {\r\n                url\r\n              }\r\n            }\r\n            summary {\r\n              value\r\n            }\r\n            channel_purpose {\r\n              value {\r\n                codename\r\n              }\r\n            }\r\n            listing_category {\r\n              value {\r\n                name\r\n                codename\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default ListingPage\r\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport Img from 'gatsby-image'\n\nconst BannerLanding = props => (\n  <section\n    id=\"banner\"\n    data-kontent-item-id={props.itemId}\n    className={`style${Math.floor(Math.random() * 6) + 1}`}\n  >\n    {props.heroImage && (\n      <Img\n        fluid={props.heroImage}\n        style={{\n          position: 'absolute',\n          left: 0,\n          top: 0,\n          width: '100%',\n          height: '100%',\n        }}\n        imgStyle={{\n          objectPosition: '75% 25%',\n        }}\n      />\n    )}\n\n    <div className=\"inner\">\n      <header className=\"major\">\n        <h1 data-kontent-element-codename={props.titleCodename}>\n          {props.title}\n        </h1>\n      </header>\n      <div\n        className=\"content\"\n        dangerouslySetInnerHTML={{ __html: props.content }}\n        data-kontent-element-codename={props.contentCodename}\n      ></div>\n      {props.button && (\n        <div className=\"content\">\n          <Link\n            className=\"button icon fa-angle-double-left\"\n            to={props.button.to}\n          >\n            {props.button.title}\n          </Link>\n        </div>\n      )}\n    </div>\n  </section>\n)\n\nexport default BannerLanding\n"],"sourceRoot":""}